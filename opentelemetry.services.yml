parameters:
  tracer_name: drupal.module.opentelemetry.default

services:
  opentelemetry.tracer:
    class: Drupal\opentelemetry\OpentelemetryTracerService
    arguments:
      - '@OpenTelemetry\SDK\Trace\TracerProvider'
      - '%tracer_name%'
      - '@config.factory'
      - '@logger.channel.opentelemetry'
      - '@plugin.manager.opentelemetry_trace'

  OpenTelemetry\SDK\Trace\TracerProvider:
    arguments:
      - ['@OpenTelemetry\SDK\Trace\SpanProcessor\SimpleSpanProcessor']

  OpenTelemetry\SDK\Trace\SpanProcessor\SimpleSpanProcessor:
    arguments:
      - '@OpenTelemetry\Contrib\Otlp\SpanExporter'

  OpenTelemetry\Contrib\Otlp\SpanExporter:
    factory:
      - '@Drupal\opentelemetry\OpenTelemetrySpanExporterFactory'
      - 'create'

  Drupal\opentelemetry\OpenTelemetrySpanExporterFactory:
    arguments:
      - '@OpenTelemetry\Contrib\Otlp\SpanExporterFactory'
      - '@config.factory'
      - '@logger.channel.opentelemetry'
      - '@messenger'

  OpenTelemetry\Contrib\Otlp\SpanExporterFactory: {}

  plugin.manager.opentelemetry_trace:
    class: Drupal\opentelemetry\OpentelemetryTraceManager
    parent: default_plugin_manager

  Drupal\opentelemetry\EventSubscriber\RequestTraceEventSubscriber:
    arguments:
      - '@opentelemetry.tracer'
      - '@messenger'
      - '@logger.channel.opentelemetry'
    tags:
      - { name: event_subscriber }

  Drupal\opentelemetry\EventSubscriber\DatabaseStatementTraceEventSubscriber:
    arguments:
      - '@opentelemetry.tracer'
    tags:
      - { name: event_subscriber }

  Drupal\opentelemetry\EventSubscriber\ExceptionTraceEventSubscriber:
    arguments:
      - '@opentelemetry.tracer'
    tags:
      - { name: event_subscriber }

  logger.channel.opentelemetry:
    parent: logger.channel_base
    arguments:
      - 'opentelemetry'
