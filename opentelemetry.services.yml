parameters:
  tracer_name: drupal.module.opentelemetry.default

services:
  logger.channel.opentelemetry:
    parent: logger.channel_base
    arguments:
      - 'opentelemetry'

  opentelemetry:
    class: Drupal\opentelemetry\OpentelemetryService
    arguments:
      - '@opentelemetry.tracer_provider'
      - '%tracer_name%'
      - '@config.factory'
      - '@logger.channel.opentelemetry'
      - '@plugin.manager.opentelemetry_trace'
      - '@request_stack'
      - '@opentelemetry.logger_proxy'
    tags:
      - name: event_subscriber
      - name: drush.command

  opentelemetry.tracer_provider:
    class: OpenTelemetry\SDK\Trace\TracerProvider
    arguments:
      - ['@opentelemetry.span_processor']
      - '@opentelemetry.sampler'

  opentelemetry.sampler.factory:
    class: OpenTelemetry\SDK\Trace\SamplerFactory

  opentelemetry.sampler:
    class: OpenTelemetry\SDK\Trace\SamplerInterface
    factory:
      - '@opentelemetry.sampler.factory'
      - 'create'

  opentelemetry.span_processor:
    class: OpenTelemetry\SDK\Trace\SpanProcessor\BatchSpanProcessor
    arguments:
      - '@opentelemetry.span_exporter'
      - '@opentelemetry.clock'

  opentelemetry.clock:
    class: OpenTelemetry\SDK\Common\Time\ClockInterface
    factory:
      - 'OpenTelemetry\SDK\Common\Time\ClockFactory'
      - 'getDefault'

  opentelemetry.traces.transport.factory:
    class: OpenTelemetry\SDK\Common\Export\TransportFactoryInterface
    factory:
      - '@opentelemetry.transport.factory.provider'
      - 'get'
    arguments:
      - 'TRACES'

  opentelemetry.transport.factory.provider:
    class: Drupal\opentelemetry\OpentelemetryTransportFactoryProvider
    arguments:
      - '@config.factory'
      - '@messenger'

  opentelemetry.span_exporter:
    class: OpenTelemetry\Contrib\Otlp\SpanExporter
    factory:
      - '@opentelemetry.span_exporter.factory'
      - 'create'

  opentelemetry.span_exporter.factory:
    class: OpenTelemetry\Contrib\Otlp\SpanExporterFactory
    arguments:
      - '@opentelemetry.traces.transport.factory'

  plugin.manager.opentelemetry_trace:
    class: Drupal\opentelemetry\OpentelemetryTraceManager
    parent: default_plugin_manager

  Drupal\opentelemetry\EventSubscriber\RequestTraceEventSubscriber:
    arguments:
      - '@opentelemetry'
      - '@messenger'
      - '@logger.channel.opentelemetry'
    tags:
      - name: event_subscriber

  Drupal\opentelemetry\EventSubscriber\ExceptionTraceEventSubscriber:
    arguments:
      - '@service_container'
    tags:
      - name: event_subscriber

  opentelemetry.logger_proxy:
    class: Drupal\opentelemetry\OpentelemetryLoggerProxy
    arguments:
      - '@logger.channel.opentelemetry'
    tags:
      - name: event_subscriber
